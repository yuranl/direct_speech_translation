{"wav_id": "73", "speaker": "73", "offset": "6.820", "duration": "0.380", "wav": "73.wav", "translation": "Hello, everyone!", "transcript": "大家好！"}
{"wav_id": "73", "speaker": "73", "offset": "7.260", "duration": "3.250", "wav": "73.wav", "translation": "Today, I would like to introduce the operation of OLAP system.", "transcript": "呃今天呢我给大家介绍一下OLAP系统实践。"}
{"wav_id": "73", "speaker": "73", "offset": "10.840", "duration": "1.850", "wav": "73.wav", "translation": "It’s called PALO, a Baidu product.", "transcript": "是百度的一款产品PALO。"}
{"wav_id": "73", "speaker": "73", "offset": "13.590", "duration": "5.610", "wav": "73.wav", "translation": "Basically, we have four parts to cover.", "transcript": "呃然后我今天介绍的这个目录主题呢会分为主要有四个方面。"}
{"wav_id": "73", "speaker": "73", "offset": "19.540", "duration": "4.700", "wav": "73.wav", "translation": "The first part is about the background of OLAP Baidu.", "transcript": "一个是会介绍一下啊嗯我们这个OLAP百度的一个背景。"}
{"wav_id": "73", "speaker": "73", "offset": "24.520", "duration": "6.360", "wav": "73.wav", "translation": "We will also introduce some applicable scenarios and analyze several cases for your reference.", "transcript": "还有一个是说我们适用的场景以及几个案例的分析，这样大家在使用的时候可以进行一些参考。"}
{"wav_id": "73", "speaker": "73", "offset": "31.530", "duration": "4.620", "wav": "73.wav", "translation": "Then, I will give a brief introduction of the collective architecture and some key features.", "transcript": "然后还有一个就是简单会介绍一下我们的集体架构以及一些关键的特性。"}
{"wav_id": "73", "speaker": "73", "offset": "37.130", "duration": "2.820", "wav": "73.wav", "translation": "Let me introduce PALO to you.", "transcript": "呃首先呢我给大家介绍一下PALO。"}
{"wav_id": "73", "speaker": "73", "offset": "40.320", "duration": "5.710", "wav": "73.wav", "translation": "Its name is actually the reverse of OLAP.", "transcript": "呃PALO的名字的由来呢是用OLAP颠倒着写就是啊就形成了PALO。"}
{"wav_id": "73", "speaker": "73", "offset": "46.420", "duration": "7.480", "wav": "73.wav", "translation": "PALO is an MPP-based database that supports SQL query.", "transcript": "然后PALO是一款MPP-based是一个交互式的一个支持SQL查呃SQL呃查询的一个数据库。"}
{"wav_id": "73", "speaker": "73", "offset": "54.610", "duration": "9.450", "wav": "73.wav", "translation": "It could deal with terbytes or even petabytes of data, mainly structured data and it supports responses on  millisecond to second level.", "transcript": "然后呢它面向的是一个百TB到PB T级别的，然后是主要是结构化数据，然后啊我们支持毫秒到秒级的一个响应。"}
{"wav_id": "73", "speaker": "73", "offset": "64.580", "duration": "5.940", "wav": "73.wav", "translation": "It was developed by the big data department of Baidu, and it is now widely used within Baidu.", "transcript": "然后它是由百度大数据部来啊研发的，嗯在百度内部也有广泛的应用。"}
{"wav_id": "73", "speaker": "73", "offset": "70.610", "duration": "8.460", "wav": "73.wav", "translation": "It has been deployed on more than 1,000 internal computers so far, and the largest business may have reached the level of over 100 TB.", "transcript": "然后内部部署的话已经超一千台机器，嗯最大的一个业务可能应该已经有到了百TB以上的级别。"}
{"wav_id": "73", "speaker": "73", "offset": "79.660", "duration": "4.610", "wav": "73.wav", "translation": "We often hear about OLTP.", "transcript": "OK，那首先呢我们大家可能听到OLTP的是呃会比较多。"}
{"wav_id": "73", "speaker": "73", "offset": "84.390", "duration": "1.320", "wav": "73.wav", "translation": "What is OLAP, then?", "transcript": "什么是OLAP呢？"}
{"wav_id": "73", "speaker": "73", "offset": "86.230", "duration": "8.420", "wav": "73.wav", "translation": "OLAP means online analytical processing.", "transcript": "OLAP呃顾名思义就叫在线数呃分析处理这样一个呃一个呃呃引擎一个概念。"}
{"wav_id": "73", "speaker": "73", "offset": "95.010", "duration": "4.270", "wav": "73.wav", "translation": "Here is a table, which shows the comparison between OLTP and OLAP.", "transcript": "然后下面这有一个表格是OLTP和OLAP的一个区分。"}
{"wav_id": "73", "speaker": "73", "offset": "99.300", "duration": "2.930", "wav": "73.wav", "translation": "We can learn more about it.", "transcript": "大家可以呃详细地了解一下。"}
{"wav_id": "73", "speaker": "73", "offset": "102.590", "duration": "14.090", "wav": "73.wav", "translation": "OLTP, in terms of its application, is mainly used for  processing daily transactions, while OLAP is used for  scenarios with a large amount of data, such as query and decision analysis.", "transcript": "然后首先呢从面向应用的一个角度上来讲呢，OLTP主要是一些日常的一些交易的处理，然后OLAP呢，是面向一些查询、分析决策啊这样一些啊比较数数据量稍微大一些的场景。"}
{"wav_id": "73", "speaker": "73", "offset": "117.100", "duration": "12.580", "wav": "73.wav", "translation": "As for access patterns, OLTP is used for small batch queries and OLAP is used for complex scenarios, such as consolidation, drill-up and drill-down.", "transcript": "然后访问的模式呢，然后O OLTP可能是一些批量的小查询，然后一些啊OLAP呢，是一些复合的聚合啊、上钻啊、下钻啊这样一些场景。"}
{"wav_id": "73", "speaker": "73", "offset": "130.760", "duration": "12.090", "wav": "73.wav", "translation": "OLTP has a small amount of data in terms of data quantity, usually the most recent data, but OLTP has access to a large amount of data.", "transcript": "然后从数据量的角度上来讲呢，OLTP一般是啊比较小的数据量，它的呃一般也是访问最新的数据，但是OLTP OLAP呢可能访问的数据量就比较大。"}
{"wav_id": "73", "speaker": "73", "offset": "143.040", "duration": "5.850", "wav": "73.wav", "translation": "There are different versions of OLTP, so you need to do some backtracking of historical data and analyze historical trends.", "transcript": "然后呢它有多个版本，因为它有一些历史的数据需要回溯以及历史的趋势需要分析。"}
{"wav_id": "73", "speaker": "73", "offset": "149.820", "duration": "5.620", "wav": "73.wav", "translation": "In terms of data update and organization, OLTP data is updated in real time.", "transcript": "然后从数据更新以及数据的组织上来讲呢,OLTP一般是讲究实时更新。"}
{"wav_id": "73", "speaker": "73", "offset": "155.680", "duration": "7.460", "wav": "73.wav", "translation": "It has data and architecture, following the paradigm requirements of the database domain.", "transcript": "然后呃以及它有数据有组织形式呢，主要是一些数据库领域的一些范式的一些呃要求。"}
{"wav_id": "73", "speaker": "73", "offset": "163.500", "duration": "4.050", "wav": "73.wav", "translation": "OLAP data is basically updated in batches.", "transcript": "然后OLAP呢可能它呃主要都是一些批量更新。"}
{"wav_id": "73", "speaker": "73", "offset": "167.560", "duration": "3.890", "wav": "73.wav", "translation": "It is rarely updated item by item.", "transcript": "然后它呃单条逐条更新的这样的需求非常非常地少。"}
{"wav_id": "73", "speaker": "73", "offset": "171.900", "duration": "7.830", "wav": "73.wav", "translation": "Its architecture mainly includes models under some well-known analysis scenarios such as the information model.", "transcript": "然后它的一些啊数据组织形式呢主要是一些包括信息模型啊这些一些著名的一些分析诶场景下的模型。"}
{"wav_id": "73", "speaker": "73", "offset": "180.260", "duration": "3.590", "wav": "73.wav", "translation": "The difference between Online and Offline mainly lies in the response time.", "transcript": "呃Online和Offline区别呢主要集中在一个响应时间上。"}
{"wav_id": "73", "speaker": "73", "offset": "184.180", "duration": "4.400", "wav": "73.wav", "translation": "Online emphasizes timely response and results.", "transcript": "Online呢可能更强调的是要及时地快速地响应，先给出结果。"}
{"wav_id": "73", "speaker": "73", "offset": "188.800", "duration": "7.370", "wav": "73.wav", "translation": "As for Offline, analysis tools such as Hadoop do not place much emphasis on response time.", "transcript": "然后Offline呢比如说我们常常可能用一些Hadoop的一些分析工具的时候，可能就它不是那么地强调呃响应的时间。"}
{"wav_id": "73", "speaker": "73", "offset": "196.800", "duration": "4.210", "wav": "73.wav", "translation": "Let us take a look at some of the OLAP systems commonly used in the industry.", "transcript": "现在呢我们看一下业界的一些诶常用的一些OLAP的一些系统。"}
{"wav_id": "73", "speaker": "73", "offset": "201.310", "duration": "6.860", "wav": "73.wav", "translation": "OLAP systems were previously monopolized by commercial companies.", "transcript": "这里有一些是诶呃在诶很早之前呢OLAP系统只是被一些商业公司所垄断。"}
{"wav_id": "73", "speaker": "73", "offset": "208.430", "duration": "6.360", "wav": "73.wav", "translation": "In recent years, with the development of big data technology, especially the development of Hadoop community, there are some open source products.", "transcript": "然后近几年呢随着大数据技术的发展，尤其是Hadoop社区的发展，然后呢开出现了一些开源产品。"}
{"wav_id": "73", "speaker": "73", "offset": "215.090", "duration": "2.310", "wav": "73.wav", "translation": "Some are cloud-based products.", "transcript": "然后还有一些是呃我们云上的。"}
{"wav_id": "73", "speaker": "73", "offset": "217.430", "duration": "4.450", "wav": "73.wav", "translation": "Google and Amazon launched OLAP products based on the cloud.", "transcript": "比如谷呃Google的和亚马逊的都出现了一些云上的OLAP产品。"}
{"wav_id": "73", "speaker": "73", "offset": "222.800", "duration": "2.750", "wav": "73.wav", "translation": "PALO is an OLAP product.", "transcript": "嗯PALO呢是是一款OLAP产品。"}
{"wav_id": "73", "speaker": "73", "offset": "225.760", "duration": "8.320", "wav": "73.wav", "translation": "Here is its positioning logic.", "transcript": "然后呢它的基础的它的一些定位呢，这里有一些啊比较啊比较是我们的当时设计的时候对对PALO的一些定位。"}
{"wav_id": "73", "speaker": "73", "offset": "234.400", "duration": "4.940", "wav": "73.wav", "translation": "PALO is a low-cost product with linear scalability.", "transcript": "首先PALO是一款低产品的，然后呢它是能够线性扩展的。"}
{"wav_id": "73", "speaker": "73", "offset": "239.750", "duration": "1.540", "wav": "73.wav", "translation": "It supports cloud deployment.", "transcript": "呃支持云化部署。"}
{"wav_id": "73", "speaker": "73", "offset": "241.400", "duration": "10.440", "wav": "73.wav", "translation": "PALO is already available on Baidu's open cloud, and users outside the company can also try it.", "transcript": "实际上我们PALO目前啊在百度开放云上其实已经呃上线了，大家呃如果是即便是公司外的一些用户，也如果想尝试的话也是可以尝试的。"}
{"wav_id": "73", "speaker": "73", "offset": "252.530", "duration": "8.240", "wav": "73.wav", "translation": "PALO is highly available with high performance, with a target of 100,000 QPS.", "transcript": "嗯还有就是PALO是支持高可用，然后它的性高性能，它的性能我们设计目标应该是在十万QPS。"}
{"wav_id": "73", "speaker": "73", "offset": "260.840", "duration": "5.790", "wav": "73.wav", "translation": "It can scan clusters of 100G per second.", "transcript": "以及每每秒扫描应该在一百G就是整个集群啊以及这样一个量级。"}
{"wav_id": "73", "speaker": "73", "offset": "266.900", "duration": "7.020", "wav": "73.wav", "translation": "It can import clusters of 10TB per hour.", "transcript": "然后我们的导入速度呢最高是可以达到呃十TB每小时的这样一个整个集群的这样一个速度。"}
{"wav_id": "73", "speaker": "73", "offset": "274.200", "duration": "17.400", "wav": "73.wav", "translation": "After its background, let us move on to some scenarios of PALO and typical cases in Baidu, about its internal production line, for your reference.", "transcript": "OK，呃介绍了一下PALO的背景之后呢，我们来介绍一下啊PALO的一些呃适用的一些场景，还有一些我们在百度内部的一些啊案例，就就是一些内部产品线对我嗯对我们的一些典型案例，大家可以作参考。"}
{"wav_id": "73", "speaker": "73", "offset": "291.880", "duration": "5.140", "wav": "73.wav", "translation": "You can consider our PALO if you are dealing with similar scenarios.", "transcript": "如是看看自己有没有类似的一些场景，如果有需要的话可以考虑我们PALO。"}
{"wav_id": "73", "speaker": "73", "offset": "297.410", "duration": "5.280", "wav": "73.wav", "translation": "It is suitable for the scenarios of data statistics and analysis.", "transcript": "嗯适用的场景呢主要就是啊对数据进行一些统计呀分析呀。"}
{"wav_id": "73", "speaker": "73", "offset": "302.930", "duration": "3.570", "wav": "73.wav", "translation": "To be more specific, there are two major types of scenarios.", "transcript": "然后详细地来讲呢可能就有两种主要比较大的场景。"}
{"wav_id": "73", "speaker": "73", "offset": "306.520", "duration": "3.530", "wav": "73.wav", "translation": "Reports and multi-dimensional analysis.", "transcript": "一种是说报表，还有一种是说我们的多维分析。"}
{"wav_id": "73", "speaker": "73", "offset": "310.990", "duration": "6.020", "wav": "73.wav", "translation": "What was the solution before PALO?", "transcript": "呃那以前啊在没有PALO这样一个产品之前，我们的产品线大家都是怎么来做呢？"}
{"wav_id": "73", "speaker": "73", "offset": "317.350", "duration": "11.970", "wav": "73.wav", "translation": "In terms of statements and reports, you schedule your task with cron and run it everyday, and then import the final result into MySQL.", "transcript": "对对于一个报表来讲，它可能比如说是呃采取一个呃定时任务，然后每天定时去跑，跑完呢把最终的结果就是最终结果，然后导入到MySQL中。"}
{"wav_id": "73", "speaker": "73", "offset": "329.530", "duration": "1.580", "wav": "73.wav", "translation": "Why is this the final result?", "transcript": "这个为什么是最终结果呢？"}
{"wav_id": "73", "speaker": "73", "offset": "331.140", "duration": "9.910", "wav": "73.wav", "translation": "MySQL has limited performance when dealing with large amounts of data, so you can only factor in the final result.", "transcript": "因为MySQL它在处理大数据量的时候是有问题的，性能上有一些唉性能上有一些考虑是达不到要求，然后它就只能把最终结果导了去。"}
{"wav_id": "73", "speaker": "73", "offset": "341.590", "duration": "12.730", "wav": "73.wav", "translation": "After getting the result, the user may make the query and get the final result by mail or other means.", "transcript": "然后还有一些呢是呃可能这样最终拿到结果之后，然后呃去用户去那个用户去查询，然后最终把发邮件啊或者是一些其他的方式把这个啊结果给展示出去。"}
{"wav_id": "73", "speaker": "73", "offset": "354.660", "duration": "1.730", "wav": "73.wav", "translation": "However, there is a problem.", "transcript": "嗯但是这就有一个问题。"}
{"wav_id": "73", "speaker": "73", "offset": "356.690", "duration": "17.710", "wav": "73.wav", "translation": "Whether you set up a cron job or import the final results into MySQL, there will be many tables and tasks, of which the cost of maintenance can be very high.", "transcript": "你破你去做定时任务也好，啊你去呃就是还有就是你去把最终结果导到MySQL中，你就会在你产生很多个任务，以及很多个在MySQL中产生很多个表，这些任务和表的维护成本是非常高的。"}
{"wav_id": "73", "speaker": "73", "offset": "376.190", "duration": "4.200", "wav": "73.wav", "translation": "Moreover, the reliability and efficiency often fall short of the requirements.", "transcript": "呃而且信性能和效率上其实可能很多时候也达不到要求。"}
{"wav_id": "73", "speaker": "73", "offset": "380.440", "duration": "1.840", "wav": "73.wav", "translation": "Users were not very satisfied.", "transcript": "这用户只是将就着这样做。"}
{"wav_id": "73", "speaker": "73", "offset": "382.860", "duration": "5.120", "wav": "73.wav", "translation": "Multidimensional analysis is generally used in scenarios such as Hadoop+Hive.", "transcript": "然后多维分析呢可能就是我们是比如之时说的Hadoop+Hive这样一些场景。"}
{"wav_id": "73", "speaker": "73", "offset": "388.440", "duration": "6.860", "wav": "73.wav", "translation": "If you want better timeliness, you can consider PALO.", "transcript": "呃如果呃但是如果你考虑时效性的话，可能也会也可以来考虑一下我们的PALO。"}
{"wav_id": "73", "speaker": "73", "offset": "395.540", "duration": "6.520", "wav": "73.wav", "translation": "Here are some examples of how Baidu implements PALO in our internal products.", "transcript": "下面是一些百度内部的一些啊产品线使用我们PALO的一些啊一些举例吧。"}
{"wav_id": "73", "speaker": "73", "offset": "402.450", "duration": "5.310", "wav": "73.wav", "translation": "The first is Baidu Statistics, which uses PALO for reporting.", "transcript": "首先第一个呢是百度统计，它呢是在报表方呃方面使用的我们的PALO。"}
{"wav_id": "73", "speaker": "73", "offset": "408.050", "duration": "3.690", "wav": "73.wav", "translation": "This page is about Baidu Statistics.", "transcript": "这张呃它首先呢它是百度统计是什么。"}
{"wav_id": "73", "speaker": "73", "offset": "411.750", "duration": "1.750", "wav": "73.wav", "translation": "You may have heard about it.", "transcript": "大家应该可能都比较清楚了。"}
{"wav_id": "73", "speaker": "73", "offset": "413.850", "duration": "4.610", "wav": "73.wav", "translation": "It is a professional website analysis tool provided by Baidu.", "transcript": "啊它是一个专业的我们百度提供的一个专业的一个网站的分析工具。"}
{"wav_id": "73", "speaker": "73", "offset": "419.850", "duration": "5.710", "wav": "73.wav", "translation": "Here is the application scenario.", "transcript": "那呃它在支它的呃使用我们的一个场景是什么样一个场景呢？"}
{"wav_id": "73", "speaker": "73", "offset": "425.830", "duration": "2.750", "wav": "73.wav", "translation": "It imports more than 300 tables every five minutes.", "transcript": "五分钟导入一次，然后有三百多张表。"}
{"wav_id": "73", "speaker": "73", "offset": "428.840", "duration": "7.960", "wav": "73.wav", "translation": "The maximum amount of data in a single day is more than 1 TB，Peak QPS for queries per second was 2,000.", "transcript": "单日的最大数据量大概在一TB超过一TB，然后啊查询的QPS每秒是最高啊峰值到两千。"}
{"wav_id": "73", "speaker": "73", "offset": "437.610", "duration": "11.590", "wav": "73.wav", "translation": "Before the introduction of PALO, when we moved from other systems to PALO, we reduced the number of computers from more than 220 to around 50.", "transcript": "然后之前在我们在在使用PALO之前，从呃其它系统迁移到PALO的过来的时候，由啊呃之前的二百二十多台机器到我们的五十多台。"}
{"wav_id": "73", "speaker": "73", "offset": "449.510", "duration": "6.560", "wav": "73.wav", "translation": "The average response time has been reduced from 60 milliseconds to 30 milliseconds after moving to PALO.", "transcript": "诶然后呃平均的响应时间呢从之前的六十毫秒到我们最呃迁移PALO之后是三十毫秒。"}
{"wav_id": "73", "speaker": "73", "offset": "457.310", "duration": "8.480", "wav": "73.wav", "translation": "This is a screenshot of a report using PALO for Baidu Statistics.", "transcript": "这个页面呢它其实啊就是PALO呃就是那个百度统计呃一个它们的一个界面的报表的截图。"}
{"wav_id": "73", "speaker": "73", "offset": "466.260", "duration": "10.140", "wav": "73.wav", "translation": "On the left are the analysis dimensions and indicators of customized PV and traffic.", "transcript": "呃大概的意思就是说每天呢左像左侧，它都把一些啊一些PV呀一些流量的分析的一些都一些啊指标维度都已经定定制好了。"}
{"wav_id": "73", "speaker": "73", "offset": "477.000", "duration": "4.160", "wav": "73.wav", "translation": "Reports are generated daily when you make the switch.", "transcript": "然后呢你只要去切换，然后每天就会呃定期地去产生这些报表。"}
{"wav_id": "73", "speaker": "73", "offset": "481.850", "duration": "6.220", "wav": "73.wav", "translation": "The next one is the application of multidimensional analysis in Baidu Waimai.", "transcript": "下一个呢，下一个是我们在多维分析啊领域的一个一个应用，是百度外卖。"}
{"wav_id": "73", "speaker": "73", "offset": "488.600", "duration": "5.610", "wav": "73.wav", "translation": "Baidu Waimai has an internal data platform, which uses the PALO engine.", "transcript": "百度外卖呢呃它有它内部的一个数据平台，使用的是我们PALO的一个引擎。"}
{"wav_id": "73", "speaker": "73", "offset": "494.870", "duration": "6.080", "wav": "73.wav", "translation": "Its operation team need to analyze orders, merchants and the salespeople.", "transcript": "然后它呃也是运营同学去分析订单啊商户啊销售人员这样一些情况。"}
{"wav_id": "73", "speaker": "73", "offset": "501.410", "duration": "3.600", "wav": "73.wav", "translation": "It is characterized by customizable dimensions.", "transcript": "然后它的特点呢是说我的维度是可以定制的。"}
{"wav_id": "73", "speaker": "73", "offset": "505.400", "duration": "5.860", "wav": "73.wav", "translation": "This is a typical multi-dimensional analysis scenario.", "transcript": "我的啊就是这样的，嗯这是一个典型的一个啊多维分析的一个场景。"}
{"wav_id": "73", "speaker": "73", "offset": "511.550", "duration": "11.340", "wav": "73.wav", "translation": "You could customize the dimensions and once the dimensions specified, you can get the analysis results in real time.", "transcript": "然后你通过你定制呃你去呃它的维度是可以任意指定的，你指定了这些维度，然后就可以随及时地啊实时地去产生出这个分析的结果。"}
{"wav_id": "73", "speaker": "73", "offset": "523.300", "duration": "6.210", "wav": "73.wav", "translation": "This is very helpful for upstream decision-making.", "transcript": "针对他们呃上上游同学啊上游的领域去进行决策啊是非常有帮助的。"}
{"wav_id": "73", "speaker": "73", "offset": "529.990", "duration": "8.880", "wav": "73.wav", "translation": "The next one is Nuomi, which is an internal data mart product using our PALO engine in the lowest layer.", "transcript": "嗯然后下一个呢是一个呃糯米，糯米是我们他他们糯米的内部的一个数据集市产品，底层也有用到我们的PALO引擎。"}
{"wav_id": "73", "speaker": "73", "offset": "539.520", "duration": "8.420", "wav": "73.wav", "translation": "It contains much more and has also the need for reporting and analysis.", "transcript": "那它里边就包含的比较多，是一个啊也有一些报表的需求，有一些啊那个分析的需求都在里面。"}
{"wav_id": "73", "speaker": "73", "offset": "548.510", "duration": "7.300", "wav": "73.wav", "translation": "After using PALO, it went from the previous minute level to the second level.", "transcript": "然后它在使用我们之前呃切换我们之后，从之前的啊分钟级别到我们的秒级。"}
{"wav_id": "73", "speaker": "73", "offset": "556.210", "duration": "5.780", "wav": "73.wav", "translation": "There are other typical cases apart from applicable PALO scenarios.", "transcript": "这是我们介绍了一下PALO的一些啊适用场景，还有一些啊使用的典型案例。"}
{"wav_id": "73", "speaker": "73", "offset": "562.230", "duration": "10.660", "wav": "73.wav", "translation": "If you have similar needs, PALO may be an option for you.", "transcript": "那下面呢呃如果就是以后如果啊同学们有大家如果有这个方面的需求的话，可以呃考虑是我们是不是可以使用我们PALO。"}
{"wav_id": "73", "speaker": "73", "offset": "573.610", "duration": "6.850", "wav": "73.wav", "translation": "Now, let us learn something about the overall architecture and some key technical features of PALO.", "transcript": "嗯那下面我们简单地介绍一下PALO的一些啊整体架构，还有一些那个关键的一些技术特点。"}
{"wav_id": "73", "speaker": "73", "offset": "580.660", "duration": "7.730", "wav": "73.wav", "translation": "It allows our users to be better acquainted with it and help with their future use of PALO.", "transcript": "这样的话用户大家可以在使用我们的时候，啊可以考虑呃有所啊对我们首先有一些了解，再更好地使用我们。"}
{"wav_id": "73", "speaker": "73", "offset": "589.300", "duration": "15.330", "wav": "73.wav", "translation": "As for its architecture, upper users only need experience with MySQL to carry out simple tasks, because PALO supports MySQL protocol.", "transcript": "嗯首先PALO的整体架构呢，啊对于上层的用户来说，啊我们嗯只是只需要它以前有过MySQL的经验，就可以来简单地使用我们，我们因为我们是支持啊MySQL的啊协议的。"}
{"wav_id": "73", "speaker": "73", "offset": "605.090", "duration": "5.370", "wav": "73.wav", "translation": "PALO is divided into two layers of FE and BE.", "transcript": "那我们在PALO的内部是分为FE和BE两呃两层。"}
{"wav_id": "73", "speaker": "73", "offset": "610.920", "duration": "8.630", "wav": "73.wav", "translation": "FE is responsible for metadata, query analysis, planning execution and task scheduling.", "transcript": "然后FE呢它负责啊就是说是是一些元数据啊，查询的解析啊，分析呀以及执行规划啊这些这任务调度啊这些方面。"}
{"wav_id": "73", "speaker": "73", "offset": "620.000", "duration": "11.240", "wav": "73.wav", "translation": "BE is responsible for data allocation, multiple copies, query execution and data scanning.", "transcript": "那BE呢可就需要负负责啊数据的分配呀，我们的多副本啊，我们具体的这些执查询的执行啊，以及呃数据的具体的一些扫描啊，这些是由在BE来完成的。"}
{"wav_id": "73", "speaker": "73", "offset": "631.820", "duration": "7.460", "wav": "73.wav", "translation": "What I want to say is that we have multiple FEs to support high availability of metadata.", "transcript": "这个里边儿我们要要说的就是说我们是有多个FE的，这个我们的考虑是说第一我们是支持元数据的高可用的。"}
{"wav_id": "73", "speaker": "73", "offset": "639.540", "duration": "2.800", "wav": "73.wav", "translation": "Any F is in between any number of FEs.", "transcript": "任何F在任何任何多个FE之间。"}
{"wav_id": "73", "speaker": "73", "offset": "642.410", "duration": "5.200", "wav": "73.wav", "translation": "RAFT-like protocols enables high availability of metadata.", "transcript": "呃我们是有类RAFT的协类RAFT的协议来实现啊元数据的一个高可用。"}
{"wav_id": "73", "speaker": "73", "offset": "647.820", "duration": "11.960", "wav": "73.wav", "translation": "When the pressure is high and there is a performance bottleneck, the availability of FE can be improved by horizontal linear scaling.", "transcript": "还有一个就是说当我们的啊压力比较大，啊性能有瓶颈，我们是可以水平的线性扩通过水平的线性扩展FE来提高我们的呃FE的这个呃高可用。"}
{"wav_id": "73", "speaker": "73", "offset": "660.210", "duration": "2.240", "wav": "73.wav", "translation": "This is only a brief introduction of the structure.", "transcript": "这里只是简单地介绍一下我们的架构啊。"}
{"wav_id": "73", "speaker": "73", "offset": "662.490", "duration": "6.260", "wav": "73.wav", "translation": "We can talk about the technical details later.", "transcript": "如果详细的技术细节我们啊嗯以后以后有机会可以再详细地去沟通。"}
{"wav_id": "73", "speaker": "73", "offset": "669.120", "duration": "6.150", "wav": "73.wav", "translation": "Let us move on to some technical features of PALO.", "transcript": "然后呃下面呢我们简也是简单地介绍一下我们的啊PALO的一些技术的一些特性。"}
{"wav_id": "73", "speaker": "73", "offset": "675.310", "duration": "8.520", "wav": "73.wav", "translation": "Users only need experience with MySQL, because PALO supports MySQL protocol.", "transcript": "啊对于用户来讲，我们啊只需要你有MySQL的经验就可以来使用我们，因为我们支持MySQL协议。"}
{"wav_id": "73", "speaker": "73", "offset": "684.400", "duration": "4.810", "wav": "73.wav", "translation": "There are several major advantages to supporting the MySQL protocol.", "transcript": "因为支持MySQL协议有有很好几个比较大的啊优点哈。"}
{"wav_id": "73", "speaker": "73", "offset": "689.360", "duration": "4.300", "wav": "73.wav", "translation": "Firs, users may find that the learning curve is pretty low.", "transcript": "第一对于就是啊对于用户来说学习曲线非常地低。"}
{"wav_id": "73", "speaker": "73", "offset": "694.250", "duration": "11.330", "wav": "73.wav", "translation": "PALO is easily compatible with higher-level applications—such as the user application JDBC—via OR ODBC.", "transcript": "然后呢我们也很容易与上层的应用，比如说啊用户的程序里用JDBC是吧，用OR ODBC去来访问我们，我们都很容易地去可以去兼容。"}
{"wav_id": "73", "speaker": "73", "offset": "706.480", "duration": "6.880", "wav": "73.wav", "translation": "The cost of system switching is very low.", "transcript": "切换的去就是用户切换的成本切换成由原来的系统切换成PALO的成本非常地低。"}
{"wav_id": "73", "speaker": "73", "offset": "713.860", "duration": "13.560", "wav": "73.wav", "translation": "It also makes it easy to connect with common BI tools on  the market, such as Tableau, Saiku and Qlik.", "transcript": "然后还可以呢我们现在轻松对接市市呃市场上的一些很呃常用的一些BI工具，然后啊像Tableau啊，Saiku啊，像Qlik啊都可以很容呃很轻松地对接。"}
{"wav_id": "73", "speaker": "73", "offset": "727.920", "duration": "5.020", "wav": "73.wav", "translation": "You can use some of the MySQL-related tools directly.", "transcript": "然后啊一些MySQL相关的周边的一些工具，我们都可以呃直接来使用。"}
{"wav_id": "73", "speaker": "73", "offset": "733.240", "duration": "7.340", "wav": "73.wav", "translation": "In terms of application, people with MySQL experience can easily use PALO.", "transcript": "对PALO的使用来讲，一些呃支持MySQL协议之后，一个有MySQL使用经验的人很容易能够使用PALO。"}
{"wav_id": "73", "speaker": "73", "offset": "740.840", "duration": "6.720", "wav": "73.wav", "translation": "After specifying the machine port with MySQL, users with the password can connect to PALO.", "transcript": "那第一行啊你用MySQL指定了呃机器端口，然后用户、密码就可以连到我们的PALO 。"}
{"wav_id": "73", "speaker": "73", "offset": "748.080", "duration": "11.370", "wav": "73.wav", "translation": "What the user sees is MySQL, but behind the scenes is PALO, not the MySQL server.", "transcript": "当然用户啊以在客户端看着是是是MySQL来连接，但是后台是我们的PALO，这个用户要稍微地呃不要以为我们是唉一个MySQL的服务器。"}
{"wav_id": "73", "speaker": "73", "offset": "760.770", "duration": "5.700", "wav": "73.wav", "translation": "What the user sees is MySQL, but behind the scenes is PALO, not the MySQL server.", "transcript": "然后呢建库建呃建表，这些语句都和MySQL是相基本相同的。"}
{"wav_id": "73", "speaker": "73", "offset": "767.060", "duration": "9.550", "wav": "73.wav", "translation": "This is the progress query of Show Load.", "transcript": "啊然后下边儿是一个Load和啊还有就是啊我们的Load导入Show Load一些导入的呃进度呃这些查询。"}
{"wav_id": "73", "speaker": "73", "offset": "776.920", "duration": "9.470", "wav": "73.wav", "translation": "At the bottom is the select SQL query, which is basically the same as MySQL.", "transcript": "然后最下面在最下面的是一个select 呃SQL的查询，嗯这些都是和啊MySQL是啊基本相同的。"}
{"wav_id": "73", "speaker": "73", "offset": "787.050", "duration": "9.050", "wav": "73.wav", "translation": "A parallel database, a large OLAP database or non-OLAP database needs to be highly available.", "transcript": "并行的数据库，一个OLAP非呃OLAP的一个啊大规模的数据库来讲，我们首先我们可能要强调的是我们的高可用。"}
{"wav_id": "73", "speaker": "73", "offset": "797.450", "duration": "11.580", "wav": "73.wav", "translation": "As we mentioned, metadata is highly available between FEs and is maintained by protocols similar to RAFT.", "transcript": "呃第一个之前可能有略微提到过，我们的元数据之间在FE之间是啊嗯是高可用的，是由类RAFT的一个协议来保持，啊。"}
{"wav_id": "73", "speaker": "73", "offset": "809.550", "duration": "3.480", "wav": "73.wav", "translation": "How to achieve high availability of data, then?", "transcript": "然后那数据来讲呢我们做怎么做到高可用呢？"}
{"wav_id": "73", "speaker": "73", "offset": "813.210", "duration": "9.740", "wav": "73.wav", "translation": "First of all, there are multiple copies of data, which can be automatically replenished and balanced.", "transcript": "第一个是说我们数据是啊啊有多副本，然后呢我们在副本之间仍是能够做到自动地补充以及自动地均衡。"}
{"wav_id": "73", "speaker": "73", "offset": "824.350", "duration": "9.520", "wav": "73.wav", "translation": "Here is a brief introduction of our FE metadata as to its high availability.", "transcript": "下面这个图是我们的FE 的这个元数据的一些呃在FE 中元数据的一个啊高可高可用的一个啊介介绍图吧。"}
{"wav_id": "73", "speaker": "73", "offset": "834.100", "duration": "1.620", "wav": "73.wav", "translation": "We will not elaborate here.", "transcript": "这个我们就不详细地展开。"}
{"wav_id": "73", "speaker": "73", "offset": "836.560", "duration": "10.220", "wav": "73.wav", "translation": "Now let's talk about a very important data model of PALO, a typical model you should pay attention to when using PALO.", "transcript": "嗯然后呃再介绍一下在PALO里边儿一个典非常典型的就是非常重要的一个数据的模型，这个大家使用PALO的时候一定要注意这一点。"}
{"wav_id": "73", "speaker": "73", "offset": "848.020", "duration": "9.830", "wav": "73.wav", "translation": "Let us say, we have a table containing such five columns as Time, ID, country, clicks and cost.", "transcript": "嗯比如假如说我们有这样一张表，是说我们有啊有五列有Time、ID、啊国家，然后点击和消费。"}
{"wav_id": "73", "speaker": "73", "offset": "859.180", "duration": "3.830", "wav": "73.wav", "translation": "There are Key columns and Value columns in PALO.", "transcript": "然后呢我在PALO里边是区分Key列和Value列的。"}
{"wav_id": "73", "speaker": "73", "offset": "863.230", "duration": "3.910", "wav": "73.wav", "translation": "The first three columns are Key columns, and the last two are Value columns.", "transcript": "那前三列呢就是一个Key列，然后后两列是一个Value列。"}
{"wav_id": "73", "speaker": "73", "offset": "867.650", "duration": "13.240", "wav": "73.wav", "translation": "PA's underlying storage of all Key columns in PALO is ordered, which enables fast positioning and searching, a binary search that all of you understand.", "transcript": "然后呃首先PA在所有的Key列在PALO里的底层存储是都是有序的，这个有序的好处就带来了就是说我能够快速地呃定位、查找，这个二分查找大家都是应该明白的。"}
{"wav_id": "73", "speaker": "73", "offset": "882.230", "duration": "4.120", "wav": "73.wav", "translation": "All Key columns are unique in PALO's internal storage.", "transcript": "然后呢所有的Key列在PALO内部存储中是唯一的。"}
{"wav_id": "73", "speaker": "73", "offset": "886.690", "duration": "6.270", "wav": "73.wav", "translation": "For data imported in multiple batches, if the Key column is the same, the Value column is automatically aggregated.", "transcript": "那多次多批导入的数据，如果Key列相同Value列是自动聚合的。"}
{"wav_id": "73", "speaker": "73", "offset": "893.480", "duration": "9.260", "wav": "73.wav", "translation": "The aggregation mode for the Value column can be specified, where Value columns with the same Key column will be automatically aggregated.", "transcript": "Key列和Value列呢，每个Value列都可以指呃每个Value列是可以指定一个聚合方式，Key列相同的Value列会自动地聚合。"}
{"wav_id": "73", "speaker": "73", "offset": "903.710", "duration": "10.820", "wav": "73.wav", "translation": "For example, you import a batch of data every five minutes, you can import more than 280 times a day.", "transcript": "好，然后呃这里呃举一个例子啊，比如说一天一天的数据，你每五分钟导入一个批次，那一天可能就会导入两百八十多次。"}
{"wav_id": "73", "speaker": "73", "offset": "914.970", "duration": "7.020", "wav": "73.wav", "translation": "If you don't have automatic aggregation, the same Key is going to generate at least 280 pieces of data.", "transcript": "那两这两百八十多次如果不自动聚合，就会至少产同一个啊Key至少要产生两百八十条数据。"}
{"wav_id": "73", "speaker": "73", "offset": "922.150", "duration": "4.430", "wav": "73.wav", "translation": "Then when you analyze de-aggregation, you have to aggregate the 280 pieces of data  in real time.", "transcript": "那你再分析去聚合的时候，就要实时地把这两百八十条给聚合出来。"}
{"wav_id": "73", "speaker": "73", "offset": "926.920", "duration": "10.540", "wav": "73.wav", "translation": "With PALO, the data you import is automatically aggregated, so the query is very efficient.", "transcript": "但是在PALO内部呢,我们会在你导入的时候就已经提前把你这二百八十条聚合成一条，这样你查询查询查找的那个速度呢就会啊非常地高效了。"}
{"wav_id": "73", "speaker": "73", "offset": "937.820", "duration": "7.870", "wav": "73.wav", "translation": "In another scenario, suppose you have a Base table, containing three pieces of data.", "transcript": "再举一个比较详细点的一个场景，假设我们有这样一张Base表,就是我们的基础数据表，里里边有三条数据。"}
{"wav_id": "73", "speaker": "73", "offset": "946.030", "duration": "4.530", "wav": "73.wav", "translation": "You import another batch of data, and we call it Delta.", "transcript": "然后呢我们又导入了一批数据，导入了这样一个批数据，我们称为Delta。"}
{"wav_id": "73", "speaker": "73", "offset": "950.830", "duration": "1.670", "wav": "73.wav", "translation": "It is incremental data.", "transcript": "然后呢这是增量数据。"}
{"wav_id": "73", "speaker": "73", "offset": "952.780", "duration": "5.030", "wav": "73.wav", "translation": "It will merge with the same existing Key, and different keys will be added.", "transcript": "它呢和之前的相同的Key会合并，不同的Key会新增。"}
{"wav_id": "73", "speaker": "73", "offset": "958.070", "duration": "5.220", "wav": "73.wav", "translation": "So this will produce a result containing four pieces of data.", "transcript": "然后这样的话就导致出呃生成这样一个结果，里面会含有四条数据。"}
{"wav_id": "73", "speaker": "73", "offset": "963.330", "duration": "3.970", "wav": "73.wav", "translation": "As for previous Value columns, they are aggregated by means of summation.", "transcript": "之前的Value列呢，因为它聚合方式是呃求和的一种聚合方式。"}
{"wav_id": "73", "speaker": "73", "offset": "967.340", "duration": "1.610", "wav": "73.wav", "translation": "They will aggregate automatically.", "transcript": "那这样的话它会自动地聚合。"}
{"wav_id": "73", "speaker": "73", "offset": "969.500", "duration": "6.870", "wav": "73.wav", "translation": "For other PA, one advantage of PALO in internal storage engine is that it also supports materialized views.", "transcript": "还有一还有另PA啊PALO在内部存储引擎中还有另外一个特点是说，我们是支持物化视图的。"}
{"wav_id": "73", "speaker": "73", "offset": "976.830", "duration": "4.150", "wav": "73.wav", "translation": "On the left is the basic data, raw data.", "transcript": "就比如说像左边这样一张表是我们的基础数据、原始数据。"}
{"wav_id": "73", "speaker": "73", "offset": "981.280", "duration": "3.120", "wav": "73.wav", "translation": "Once it's imported into PALO, there will be a base table generated.", "transcript": "然后呢你导入PALO之后，我们生成一张基础表。"}
{"wav_id": "73", "speaker": "73", "offset": "984.550", "duration": "6.250", "wav": "73.wav", "translation": "As we said, PALO is sorted by the Key column, so its order will change a little bit.", "transcript": "然后呢之前刚才讲过PALO是按照Key列进行排序的，所以它的顺序会啊发生一点变化。"}
{"wav_id": "73", "speaker": "73", "offset": "991.430", "duration": "17.810", "wav": "73.wav", "translation": "Assuming that the user queries only the ID and PV columns, not the time and province columns, you can create a materialized view with fewer columns.", "transcript": "但是呢如果假设我们需有这样一种场景，就是用户呢他的查询只包含这里的ID列以及它的PV列，对于时间列和呃省份列是不关注的，那这个时候，我们可以建一张啊聚物化视图，然后减少其中的列。"}
{"wav_id": "73", "speaker": "73", "offset": "1010.030", "duration": "4.120", "wav": "73.wav", "translation": "This forms an aggregate table with only ID and PV columns.", "transcript": "这样的话就形成比如说我们生成这样一张聚合表，里边只有ID和PV。"}
{"wav_id": "73", "speaker": "73", "offset": "1014.630", "duration": "9.260", "wav": "73.wav", "translation": "If the user does not need the time column and the province column when querying, the aggregate table can respond directly for higher speed.", "transcript": "那用户来查询的时候，如果他不不需要使用太时间列和省份列，我们就可以直接用这张聚合表去响应，这样速度就会提升。"}
{"wav_id": "73", "speaker": "73", "offset": "1024.670", "duration": "1.890", "wav": "73.wav", "translation": "Of course, it also has a disadvantage.", "transcript": "当然它也有一个缺点啊。"}
{"wav_id": "73", "speaker": "73", "offset": "1026.720", "duration": "5.930", "wav": "73.wav", "translation": "The materialized views take up a small amount of data space.", "transcript": "就是你这样是把这个物化视图生成之后，它需要多占这样一小部分啊数据空间。"}
{"wav_id": "73", "speaker": "73", "offset": "1033.910", "duration": "3.830", "wav": "73.wav", "translation": "We need to balance that a little bit in production.", "transcript": "这个我们在啊生产环境下是稍微有一点权衡就好。"}
{"wav_id": "73", "speaker": "73", "offset": "1038.330", "duration": "18.760", "wav": "73.wav", "translation": "By the way, the materialized view is automatically updated when imported, automatically located and selected when you query, without any additional user intervention.", "transcript": "呃多说一句哈，咳就补充一点，就是说这个物化视图呢，它是在你导入的时候是自动更新的，然后在你查询的时候是自动定位自动啊呃选择的，这样不需要用户进行呃任何额外的干预。"}
{"wav_id": "73", "speaker": "73", "offset": "1057.550", "duration": "5.680", "wav": "73.wav", "translation": "Let us move on to other important features of PALO in terms of storage.", "transcript": "啊下面呢我们就介绍一下PALO在呃存储方面的几个其他的一些比较重要的特点。"}
{"wav_id": "73", "speaker": "73", "offset": "1063.870", "duration": "6.340", "wav": "73.wav", "translation": "First of all, it supports column and row storage.", "transcript": "首先呢我们是支持列存的，啊当然我们也是支持行存，啊同时我们也支持列存。"}
{"wav_id": "73", "speaker": "73", "offset": "1071.430", "duration": "1.740", "wav": "73.wav", "translation": "What is the advantage of column storage?", "transcript": "那列存的好处呢是说？"}
{"wav_id": "73", "speaker": "73", "offset": "1073.350", "duration": "11.260", "wav": "73.wav", "translation": "First, when you query and if there is only part of columns, not all columns,  the amount of data to be scanned is relatively small since the data of each column is stored separately.", "transcript": "啊第一个，嗯当你查询的时候，如果只包含其中一部分列，不包含所有的列的时候，因为列存呢它是每一列的数据单独存储的，这样需要扫盘的数据量就会小。"}
{"wav_id": "73", "speaker": "73", "offset": "1085.090", "duration": "15.720", "wav": "73.wav", "translation": "In addition, when you put data of each column together—as the data format is the same—it is very convenient for us to compress the data during storage and reduces the space occupied.", "transcript": "然后另外呢是当你啊每一列的数据放在然放在一起，然后每一列的这个啊数据格式都是相同的，这样便于我们去存储的时候进行压缩，减少呢存储的一个数据量占用的一个存储存储空间。"}
{"wav_id": "73", "speaker": "73", "offset": "1101.570", "duration": "2.230", "wav": "73.wav", "translation": "PALO supports partitioning into two layers.", "transcript": "啊PALO呢是支持两层分区的。"}
{"wav_id": "73", "speaker": "73", "offset": "1104.250", "duration": "3.020", "wav": "73.wav", "translation": "What is partitioning?", "transcript": "然后呢什么是啊分呃分区呢？"}
{"wav_id": "73", "speaker": "73", "offset": "1107.330", "duration": "6.080", "wav": "73.wav", "translation": "A large processing system always distributes data across multiple computers.", "transcript": "这个是对于一个大型的一个处理系统来说，啊一定会把数据呢去分布在多台机器之上。"}
{"wav_id": "73", "speaker": "73", "offset": "1113.710", "duration": "1.410", "wav": "73.wav", "translation": "How to partition the two layers?", "transcript": "那何为两层分区？"}
{"wav_id": "73", "speaker": "73", "offset": "1115.140", "duration": "4.860", "wav": "73.wav", "translation": "What is the advantage of it compared to the traditional one-layer partition?", "transcript": "相比于传统的一层分区，我们这样一个呃好处是什么呢？"}
{"wav_id": "73", "speaker": "73", "offset": "1120.200", "duration": "6.220", "wav": "73.wav", "translation": "Two layers of PALO make it easy to isolate old and new data.", "transcript": "首先呢我们我的呃PALO的两层分区呢可以呃很容易地做到新旧数据的隔离。"}
{"wav_id": "73", "speaker": "73", "offset": "1127.330", "duration": "17.010", "wav": "73.wav", "translation": "For example, in the first layer, we distinguish the data by time, so that the new data will be imported into the new partition, and the old data will stay in the old partition.", "transcript": "比如把新的呃新的分就是我比如说在第一层分区，我们通过时间的维度来把啊数据给区分开，这样的话就是新的新的数据就会导入在一个新的分诶新的一级分区，然后老的数据呢就会留在了老呃老的这个分区里。"}
{"wav_id": "73", "speaker": "73", "offset": "1145.600", "duration": "15.560", "wav": "73.wav", "translation": "This saves a lot of history data and reduces the unnecessary merging of background or back-end storage in the storage engine, as well as IO overhead.", "transcript": "然后呢它其实就是这样的话就减少了大量的历史数据，啊以及就是在我们后台啊底层去存储引擎存储的时候去做的一些不必要的一些啊合并呀，一些呃减少我们底层的一些啊IO的一些开销。"}
{"wav_id": "73", "speaker": "73", "offset": "1162.580", "duration": "4.090", "wav": "73.wav", "translation": "It also simplifies the expansion of the table.", "transcript": "还有就是啊简化了这个表的一个扩容。"}
{"wav_id": "73", "speaker": "73", "offset": "1167.130", "duration": "0.930", "wav": "73.wav", "translation": "Why is that?", "transcript": "这个怎么讲呢？"}
{"wav_id": "73", "speaker": "73", "offset": "1168.220", "duration": "20.280", "wav": "73.wav", "translation": "In the case of the one-layer partition, the common Hash partition, if you want to reduce the amount of data per bucket when data is increasing and you can't handle it, you have to increase the partition.", "transcript": "就比如说我们在一层分区啊举一个呃啊常用的Hash分区，那这样呢当你如果数据量持续地增大，你的不惜你的每一个桶的一个Hash分桶的一个数据量持续增大的时候，你没有办法去处理的时候，你希望减少你的每一个桶的数据量，那你只能去增大你的分区数。"}
{"wav_id": "73", "speaker": "73", "offset": "1189.400", "duration": "12.110", "wav": "73.wav", "translation": "However, the cost of adding buckets is very high, because you need to recalculate all the data for buckets.", "transcript": "但是对于一个Hash分桶来说，如果你需要增加呃你需要重新分桶，你就要这个代价呢是非常高的，因为你需要把所有的数据啊都重新地计算一下啊分桶。"}
{"wav_id": "73", "speaker": "73", "offset": "1202.600", "duration": "14.980", "wav": "73.wav", "translation": "With two-layer partition, as the data continues to grow, you just need to adjust the number of buckets based on the internal two-layer partitioning when building one-layer partition.", "transcript": "但是两级分区就不呃就不需要，当我的数据量持续地啊啊就是在增大的时候，我只需要去在新建分新的啊一级分区的时候，在内部二层分区的基础上去调整这个Hash的啊桶数就可以了。"}
{"wav_id": "73", "speaker": "73", "offset": "1218.080", "duration": "6.360", "wav": "73.wav", "translation": "The SQL is an example for two-layer partition.", "transcript": "下面这样一个呃SQL语句呢是我们在诶就是呃两层分区的一个举例。"}
{"wav_id": "73", "speaker": "73", "offset": "1224.850", "duration": "12.340", "wav": "73.wav", "translation": "First of all, it was partitioned in the dimension of time, and each layer was divided into 32 buckets.", "transcript": "首先你看它在时间的维度上呢，它就啊啊进行了一个一级一层的一级分区，然后每一层之下又进行了啊Hash分桶，分了三十二个桶。"}
{"wav_id": "73", "speaker": "73", "offset": "1237.550", "duration": "4.450", "wav": "73.wav", "translation": "It is an example for two-layer partition, a syntax example.", "transcript": "这样的一个两层分区的一个啊一个举例，一个语法举例。"}
{"wav_id": "73", "speaker": "73", "offset": "1242.870", "duration": "3.680", "wav": "73.wav", "translation": "PALO also supports hierarchical storage.", "transcript": "然后呢PALO呢,还支持一个分级存储的概念。"}
{"wav_id": "73", "speaker": "73", "offset": "1246.900", "duration": "1.910", "wav": "73.wav", "translation": "What is hierarchical storage?", "transcript": "那什么是分级存储的概念呢？"}
{"wav_id": "73", "speaker": "73", "offset": "1248.950", "duration": "4.860", "wav": "73.wav", "translation": "Currently, there are both SSDs and mechanical hard drives on servers.", "transcript": "就是说比如说现在的我们的服务器啊都是SSD和机械硬盘是并存的。"}
{"wav_id": "73", "speaker": "73", "offset": "1254.410", "duration": "12.150", "wav": "73.wav", "translation": "We want to use SSDs because of its high performance, but it has small capacity, so we have to use mechanical drives at the same time.", "transcript": "那我们一S我们一方面呢是非常想利用SSD的啊这个高性能，然后另一方面因为SSD又比较小一般的容量都比较小，我们又不得不利用哎机械硬盘。"}
{"wav_id": "73", "speaker": "73", "offset": "1267.190", "duration": "11.330", "wav": "73.wav", "translation": "On the other hand, when querying—data can be divided into new data and old data—the probability of new data being queried is much higher than that of old data.", "transcript": "但是另一方面从另从我们的查询的角度来讲呢，一一般对于数据呢可以分为新数据和老数据，那新数据被查询到的概率是远远要高于老数据的。"}
{"wav_id": "73", "speaker": "73", "offset": "1278.720", "duration": "5.850", "wav": "73.wav", "translation": "So we can put new data on SSDs and the old data on the mechanical hard drive.", "transcript": "那我们就可以把新数据放在SSD上，然后啊老数据放在啊机械硬盘上。"}
{"wav_id": "73", "speaker": "73", "offset": "1284.930", "duration": "7.500", "wav": "73.wav", "translation": "However, artificial migration of the data is costly.", "transcript": "但是如果我们的人工需要去呃去存那个去移动这些数据的话，就非常地代价又比较高。"}
{"wav_id": "73", "speaker": "73", "offset": "1292.610", "duration": "8.220", "wav": "73.wav", "translation": "PALO supports the automatic migration of these data between SSDS and mechanical hard drive.", "transcript": "所以PALO支持自动地去啊迁移和移动这些啊数据，在S在SSD和机械硬盘之间。"}
{"wav_id": "73", "speaker": "73", "offset": "1301.620", "duration": "8.660", "wav": "73.wav", "translation": "Let us talk about practice, including how to achieve superior performance of PALO as well as its features.", "transcript": "啊下面呢我们再讲一下啊就是啊执行方面的PA PALO一些怎么样去做到高性能和一些特点。"}
{"wav_id": "73", "speaker": "73", "offset": "1311.100", "duration": "5.430", "wav": "73.wav", "translation": "As we mentioned, PALO is a MPP execution engine.", "transcript": "首先我们之前呃已已经提到过的是说，PALO是一个MPP的一个执行引擎。"}
{"wav_id": "73", "speaker": "73", "offset": "1316.870", "duration": "0.840", "wav": "73.wav", "translation": "What is MPP?", "transcript": "什么是MPP？"}
{"wav_id": "73", "speaker": "73", "offset": "1317.730", "duration": "3.420", "wav": "73.wav", "translation": "MPP refers to Massively Parallel Processing.", "transcript": "就是大规模并行处理的一个啊缩写。"}
{"wav_id": "73", "speaker": "73", "offset": "1321.510", "duration": "3.670", "wav": "73.wav", "translation": "It's central to PALO's ability to achieve high performance.", "transcript": "这个是我们其实是啊是PALO实现高性能的一个核心。"}
{"wav_id": "73", "speaker": "73", "offset": "1326.420", "duration": "3.820", "wav": "73.wav", "translation": "PALO, on the other hand, supports vectorized execution.", "transcript": "然后另外一方面呢,我们是PALO是支持啊向量化执行的。"}
{"wav_id": "73", "speaker": "73", "offset": "1331.000", "duration": "6.220", "wav": "73.wav", "translation": "Vectorized execution is actually an underlying optimization.", "transcript": "呃就是它向量化执行是实际上是一个非常底层的一个呃优化。"}
{"wav_id": "73", "speaker": "73", "offset": "1337.240", "duration": "8.760", "wav": "73.wav", "translation": "It reduces CPU pipeline execution and is friendly to branch prediction .", "transcript": "它减少了一些呃主要是在减少执呃执一些CPU的一些啊流水线啊比较友好，然后分支预测啊都比较好。"}
{"wav_id": "73", "speaker": "73", "offset": "1346.690", "duration": "11.100", "wav": "73.wav", "translation": "In addition, as it is distributed execution, PALO also supports the commonly used Merge-Sort.", "transcript": "然后还有一个就是说，啊我们是呃对于一个，因为我们是分布式执行，然后我们嗯PALO 还支持一个啊常用的一个Merge-Sort。"}
{"wav_id": "73", "speaker": "73", "offset": "1358.130", "duration": "7.190", "wav": "73.wav", "translation": "That is to say, when sorting large-scale data, it can help merge and sort among multiple nodes.", "transcript": "就是对于一个排序，大规模大数据量的排序的时候，我们在多节点之间的啊是进行一个归并排序的。"}
{"wav_id": "73", "speaker": "73", "offset": "1365.940", "duration": "5.120", "wav": "73.wav", "translation": "This provides good performance in data sorting.", "transcript": "然后这样对呃对排序是比较呃比较呃性能是比较好的。"}
{"wav_id": "73", "speaker": "73", "offset": "1371.580", "duration": "12.970", "wav": "73.wav", "translation": "For large-scale aggregations and sortings, PALO allows these data to be placed in order if there is insufficient memory.", "transcript": "然后还有就是说对于啊落盘对于一些啊大规模的一些聚合啊一些排序啊，然后如果你的啊数据量非常大，内存搞不定，然后那这个时候我们是支持对这些数据进行落盘的。"}
{"wav_id": "73", "speaker": "73", "offset": "1385.110", "duration": "4.140", "wav": "73.wav", "translation": "There is another problem even though the execution and storage is pretty good.", "transcript": "然后嗯当我们的执行和存储都非常好的时候。"}
{"wav_id": "73", "speaker": "73", "offset": "1389.400", "duration": "9.680", "wav": "73.wav", "translation": "Queries may interact when multiple users are using the same cluster.", "transcript": "我们常常会遇到一个问题是说，呃多个用户使用同一个集群的时候相他们的呃他们的这个查询相互影响。"}
{"wav_id": "73", "speaker": "73", "offset": "1399.950", "duration": "11.150", "wav": "73.wav", "translation": "For one user, interactions may exist between different queries, between different imports, and between the queries and imports.", "transcript": "还有就是对于同一个用户来说，它的不同的查询，或者说啊不同的还有它的导入，导入与查询之间、查询与查询之间是相互影响的。"}
{"wav_id": "73", "speaker": "73", "offset": "1411.360", "duration": "0.440", "wav": "73.wav", "translation": "Why?", "transcript": "为什么？"}
{"wav_id": "73", "speaker": "73", "offset": "1411.810", "duration": "3.200", "wav": "73.wav", "translation": "System resources are limited.", "transcript": "因为资呃系统的这个呃资源是有限的。"}
{"wav_id": "73", "speaker": "73", "offset": "1415.240", "duration": "3.980", "wav": "73.wav", "translation": "When a large query is executed other queries may be affected.", "transcript": "当他发了一个非常大的查询，那可能其他的查询就会受到影响。"}
{"wav_id": "73", "speaker": "73", "offset": "1420.850", "duration": "7.380", "wav": "73.wav", "translation": "PALO provides a whole set of resource isolation solutions.", "transcript": "好，那这个时候我们啊PALO呢是提供了一个呃一套的一整套的一个资源隔离的方案来解决这个问题。"}
{"wav_id": "73", "speaker": "73", "offset": "1429.610", "duration": "7.190", "wav": "73.wav", "translation": "Simply put, PALO supports setting priorities, such as High, Low, and Normal.", "transcript": "呃简单地说呢我们是啊支持给作业呢设定一定的优先级，然后比如High啊、Low啊、Normal啊。"}
{"wav_id": "73", "speaker": "73", "offset": "1436.980", "duration": "10.430", "wav": "73.wav", "translation": "To ensure that queries are executed and all resources are appropriately allocated, with small queries allowed for.", "transcript": "然后保证它们这个啊不同的查询之间，它不会说因为你有一个非常大的差距，把其它查询的资源都抢走了，然后这个小别的查询就不能执行。"}
{"wav_id": "73", "speaker": "73", "offset": "1449.100", "duration": "3.620", "wav": "73.wav", "translation": "In fact, this is implemented based on CGroup internally.", "transcript": "嗯当然我们内部呢是实现CGroup的。"}
{"wav_id": "73", "speaker": "73", "offset": "1452.760", "duration": "14.980", "wav": "73.wav", "translation": "The detailed solution to resource isolation is still being refined and will be better in the next release.", "transcript": "这个呃资源隔离的一个详细的方案，我们在最新的版本还在呃持续地优化，然后呃目前我们在云上呃就是以后我们这嗯下我们要出我们要出的下一个版本的资源隔离的方案会更好。"}
{"wav_id": "73", "speaker": "73", "offset": "1469.530", "duration": "2.220", "wav": "73.wav", "translation": "Ok, let us just leave it there.", "transcript": "好，这里就不详细地说了。"}
{"wav_id": "73", "speaker": "73", "offset": "1471.820", "duration": "3.740", "wav": "73.wav", "translation": "Here is a brief introduction.", "transcript": "下面是一个啊是我们的一个啊简单的呃介绍。"}
{"wav_id": "73", "speaker": "73", "offset": "1477.170", "duration": "6.240", "wav": "73.wav", "translation": "It is about the import and export functions of PALO.", "transcript": "呃然后对于呃下面介绍一下啊就是PALO那个导入和导出的功能。"}
{"wav_id": "73", "speaker": "73", "offset": "1483.950", "duration": "13.190", "wav": "73.wav", "translation": "It supports a variety of ways to import data, whether it's on Hadoop, a local disk or on BOS.", "transcript": "因为嗯我们现在支持啊多种的导入的一个方式，比如说你的数据，不管是你的数据放在哪里，比如说你是放在Hadoop上啊,你是放在本地，你是放在啊百度开放云的BOS上。"}
{"wav_id": "73", "speaker": "73", "offset": "1497.350", "duration": "4.680", "wav": "73.wav", "translation": "All these data can be imported to our PALO system.", "transcript": "啊都我们都可以支持地导入进行的导入到我们的啊PALO的系统。"}
{"wav_id": "73", "speaker": "73", "offset": "1502.620", "duration": "10.090", "wav": "73.wav", "translation": "There is another scenario where it also supports multi-table import atomic validation.", "transcript": "然后呢对于呃有这样一种场景，就是说用户呢他可我们还支持一种是说多表的导入那原子生效。"}
{"wav_id": "73", "speaker": "73", "offset": "1512.910", "duration": "13.480", "wav": "73.wav", "translation": "Multi-table import by atomic means is often necessary in business to help users achieve multi-table consistency.", "transcript": "就是说你一你原子的向多个表进行导入，这个时候用户在很多时候在业务上是有这个啊这个需求的，我们可以保证它啊就是做到这方面的原子性。"}
{"wav_id": "73", "speaker": "73", "offset": "1526.810", "duration": "2.870", "wav": "73.wav", "translation": "Exports are similar to imports.", "transcript": "然后导出呢我们和导入是类似的。"}
{"wav_id": "73", "speaker": "73", "offset": "1529.890", "duration": "13.150", "wav": "73.wav", "translation": "PALO also supports exporting to a variety of data destinations, including Hadoop and BOS.", "transcript": "我们也支持像多种数据源的啊数据目的地的一个啊导出，这个支持Hadoop啊、BOS啊，啊这些这些呃存储的存储。"}
{"wav_id": "73", "speaker": "73", "offset": "1543.860", "duration": "9.230", "wav": "73.wav", "translation": "As we know that PALO is a partial OLAP and commonly used in scenarios such as statement analysis.", "transcript": "然后介绍再介绍一下，就是说啊PALO是一款O OLAP的是偏去啊报表啊分析的这样一些场景。"}
{"wav_id": "73", "speaker": "73", "offset": "1553.290", "duration": "8.810", "wav": "73.wav", "translation": "As for the scenarios you analyzed, it also strengthens SQL, as some augmentation.", "transcript": "那我们针对于这样你分析的一些场景，我们还提供了一些SQL上的一些啊叫强支持吧，就是一些诶增强。"}
{"wav_id": "73", "speaker": "73", "offset": "1563.270", "duration": "26.450", "wav": "73.wav", "translation": "It is noteworthy that PALO supports window functions, which is very helpful for those with analytical experience and which makes ranking and sequential calculations easier and more efficient.", "transcript": "首先我们支持呃要说的要值得提一提的是，我们支PALO是支持窗口函数的，这个啊有有分析经验的人可能就嗯感觉会呃收益会比较大，就是说你在计算有了窗口函数，你在计算啊排名啊、同环比啊方面都非常地高，就是都主就变得非常地简单和呃和高效。"}
{"wav_id": "73", "speaker": "73", "offset": "1591.200", "duration": "8.230", "wav": "73.wav", "translation": "For example, without a window function, it's hard to quickly find the three highest-paid people in the same department.", "transcript": "然后比如说举一个例子，同一个部门薪水最高的三个人，如果没有窗口函数，啊这个是很难做到的。"}
{"wav_id": "73", "speaker": "73", "offset": "1601.210", "duration": "0.940", "wav": "73.wav", "translation": "You can give it a try.", "transcript": "大家可以试一下。"}
{"wav_id": "73", "speaker": "73", "offset": "1603.360", "duration": "4.620", "wav": "73.wav", "translation": "In addition, it is designed to improve usability for users.", "transcript": "呃另外呢我们为了就是啊提高用户的一个易用性。"}
{"wav_id": "73", "speaker": "73", "offset": "1608.200", "duration": "17.220", "wav": "73.wav", "translation": "You can simply use MySQLClient to connect to our server and view the help information easily.", "transcript": "啊啊我们就是在啊客户端在MySQL客户端，你可以很容易地做到比如我们叫啊查看我们的帮助的文档，不需要去说啊你只需要连到我们的服务端，你用MySQL客户端连到我们的服务端，就可以很方便地去查看帮助，帮助信息。"}
{"wav_id": "73", "speaker": "73", "offset": "1625.860", "duration": "7.300", "wav": "73.wav", "translation": "It uses the same syntax as MySQL.", "transcript": "你呃Help就是语法呢就是啊和MySQL一样，Help什么什么。"}
{"wav_id": "73", "speaker": "73", "offset": "1633.230", "duration": "2.620", "wav": "73.wav", "translation": "For example, if you want to see the import, use Help Load.", "transcript": "比如说你要查看导入，Help Load就可以。"}
{"wav_id": "73", "speaker": "73", "offset": "1636.670", "duration": "14.030", "wav": "73.wav", "translation": "In this way, users do not have to switch between different help documents and web pages frequently, so it is convenient and user-friendly.", "transcript": "呃这样的话就减少了用户去呃在不同的啊帮助文文档啊,帮助网页呀这些页面之间去切换，很方很用户你用起呃用起来的时候就会非常地啊啊啊人性化、友好。"}
{"wav_id": "73", "speaker": "73", "offset": "1651.490", "duration": "5.530", "wav": "73.wav", "translation": "So that's the basics of PALO.", "transcript": "呃PALO的那个呃一些内容呢，基本上就简单地介绍到这里。"}
{"wav_id": "73", "speaker": "73", "offset": "1657.440", "duration": "6.390", "wav": "73.wav", "translation": "Here is our contact information.", "transcript": "啊下面呢是我们呃我们现在的一些啊开放的就是我们的一些联系我们的联系方式。"}
{"wav_id": "73", "speaker": "73", "offset": "1664.070", "duration": "11.410", "wav": "73.wav", "translation": "PALO has been logged into the Baidu open cloud, and this link allows you to access the cloud and learn more about our products and their fucntions.", "transcript": "首先这个百度开放云是PALO啊已经登录到百路百度开放云上，然后这个链接大家可以通过去到云上详细地啊了解我们的一些产品和功能。"}
{"wav_id": "73", "speaker": "73", "offset": "1676.900", "duration": "3.720", "wav": "73.wav", "translation": "E-mail us if you have any questions.", "transcript": "还有就是如果有什么呃问题的话，可以跟我们呃发邮件。"}
{"wav_id": "73", "speaker": "73", "offset": "1681.480", "duration": "1.030", "wav": "73.wav", "translation": "Thank you!", "transcript": "好，谢谢大家！"}
