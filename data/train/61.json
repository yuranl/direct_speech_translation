{"wav_id": "61", "speaker": "61", "offset": "7.830", "duration": "0.530", "wav": "61.wav", "translation": "Hello everyone!", "transcript": "大家好！"}
{"wav_id": "61", "speaker": "61", "offset": "8.410", "duration": "2.770", "wav": "61.wav", "translation": "I am Wei Likai, an audio engineer from Baidu Voice Technology Department.", "transcript": "我是语音技术部语音研发工程师魏利开。"}
{"wav_id": "61", "speaker": "61", "offset": "11.560", "duration": "3.240", "wav": "61.wav", "translation": "Today I will give you some details on the applications of voice technology.", "transcript": "今天给大家介绍一些语音技术实战的情况。"}
{"wav_id": "61", "speaker": "61", "offset": "16.340", "duration": "5.850", "wav": "61.wav", "translation": "As of now, our three technologies including automated voice recognition, Text-to-Speech and voice wake-up have already been opened to users.", "transcript": "目前百度语音已经开放的技术有语音识别、合成和唤醒三个方向。"}
{"wav_id": "61", "speaker": "61", "offset": "22.590", "duration": "1.880", "wav": "61.wav", "translation": "Among which, voice wake-up is a purely off-line technology.", "transcript": "啊唤醒是纯离线的技术。"}
{"wav_id": "61", "speaker": "61", "offset": "24.850", "duration": "4.040", "wav": "61.wav", "translation": "Automated voice recognition and Text-to-Speech are both accessible online and offline.", "transcript": "语音识别和合成是有既有离线又有在线。"}
{"wav_id": "61", "speaker": "61", "offset": "29.700", "duration": "4.890", "wav": "61.wav", "translation": "And they are available on android and IOS, as well as the SDKs of these two platforms.", "transcript": "啊提供的平台有安卓、IOS两个平台的SDK。Z"}
{"wav_id": "61", "speaker": "61", "offset": "34.890", "duration": "0.500", "wav": "61.wav", "translation": "In addition, the two platforms also provide REST API.", "transcript": "并且呢呃在这两个平台之外还提供REST API的接口。"}
{"wav_id": "61", "speaker": "61", "offset": "35.390", "duration": "17.940", "wav": "61.wav", "translation": "Because this lesson only lasts for about 15 minutes, I therefore directly use the simplest REST API to show automated voice recognition and Text-to-Speech, followed by a simple operation to demonstrate the capability of SDK.", "transcript": "呃由于这一节课程的时间限制比较短，只有十五分钟左右，那我就直接用最简单的REST API来演示语音识别和合成，然后通过一个简单的操作去展示一下SDK的能力。"}
{"wav_id": "61", "speaker": "61", "offset": "54.890", "duration": "6.070", "wav": "61.wav", "translation": "All codes involved can be downloaded from GitHub, and the download link can be found in the appendix of this lesson.", "transcript": "呃涉及到的代码呢都可以从GitHub上进行下载，下载地址可以在课程的附件中进行查找。"}
{"wav_id": "61", "speaker": "61", "offset": "63.920", "duration": "2.220", "wav": "61.wav", "translation": "Ok, let us start with the simplest operation. ", "transcript": "好，那我们就先从最简单的开始。"}
{"wav_id": "61", "speaker": "61", "offset": "66.460", "duration": "4.890", "wav": "61.wav", "translation": "Let me show you the function of Text-to-Speech which is based on REST API.", "transcript": "首先我们看一下语音合成的功能展示，这个展示是基于REST API的。"}
{"wav_id": "61", "speaker": "61", "offset": "72.270", "duration": "3.740", "wav": "61.wav", "translation": "In order to use the function of Text-to-Speech, we need to complete two steps.", "transcript": "啊要使用基于REST API的语音合成功能呢，需要两个步骤。"}
{"wav_id": "61", "speaker": "61", "offset": "78.180", "duration": "6.620", "wav": "61.wav", "translation": "In the first step, we need to acquire a token which can be used to achieve Text-to-Speech synthesis through the synthesis interface.", "transcript": "第一个步骤就是先获取到token，获取到token之后，通过合成接口来进行合成。"}
{"wav_id": "61", "speaker": "61", "offset": "87.310", "duration": "2.270", "wav": "61.wav", "translation": "Now, let us give a try.", "transcript": "那我们呃实际操作一下。"}
{"wav_id": "61", "speaker": "61", "offset": "91.450", "duration": "5.830", "wav": "61.wav", "translation": "Search “Baidu Speech” via Baidu search engine and enter its official website, yuyin.baidu.com. ", "transcript": "搜索“百度语音”，进入百度语音官网yuyin.baidu.com。"}
{"wav_id": "61", "speaker": "61", "offset": "98.410", "duration": "4.940", "wav": "61.wav", "translation": "Find the \"Document Center\" where we can find \"Text-to-Speech REST API\".", "transcript": "进到“文档中心”，在“文档中心”中找到“语音合成REST API”。"}
{"wav_id": "61", "speaker": "61", "offset": "106.300", "duration": "2.890", "wav": "61.wav", "translation": "Then, find \"Authentication mechanism\" and click it.", "transcript": "然后再找到“鉴权认证机制”，点击进入。"}
{"wav_id": "61", "speaker": "61", "offset": "110.900", "duration": "5.110", "wav": "61.wav", "translation": "This page contains an example link which can be used to acquire the token. ", "transcript": "在该页面有一个示例链接，这个链接就是用于获取token的。"}
{"wav_id": "61", "speaker": "61", "offset": "116.350", "duration": "4.570", "wav": "61.wav", "translation": "Now, let’s copy this example link into the address bar of the browser.", "transcript": "我们将这个链示例链接直接复制出去，贴到浏览器的地址栏。"}
{"wav_id": "61", "speaker": "61", "offset": "121.800", "duration": "5.180", "wav": "61.wav", "translation": "In this link, two parameters need to be replaced, namely client_id and client_secret.", "transcript": "在这个链接中有两个参数需要替换，client_id和client_secret。"}
{"wav_id": "61", "speaker": "61", "offset": "127.520", "duration": "2.500", "wav": "61.wav", "translation": "Their corresponding keys can be found in Application Management. ", "transcript": "这两个key可以在应用管理中找到。"}
{"wav_id": "61", "speaker": "61", "offset": "131.690", "duration": "3.580", "wav": "61.wav", "translation": "Click \"View key\" in Application Management. ", "transcript": "应用管理中找到对应的应用点击“查看key”。"}
{"wav_id": "61", "speaker": "61", "offset": "136.620", "duration": "8.540", "wav": "61.wav", "translation": "The API Key can be used to replace client_id and Secret Key to client_secret. ", "transcript": "这里的API Key分别与上面的client_id呃啊对应，啊Secret Key与client_secret对应。"}
{"wav_id": "61", "speaker": "61", "offset": "145.240", "duration": "5.080", "wav": "61.wav", "translation": "Copy these two keys to replace the corresponding parameters in the original link. ", "transcript": "将其复制出去，替换为原链接的对应参数。"}
{"wav_id": "61", "speaker": "61", "offset": "156.250", "duration": "4.900", "wav": "61.wav", "translation": "Then the token we need can be acquired by clicking Enter to open this page.", "transcript": "替换之后直接回车，打开这个页面即可得到我们需要的token。"}
{"wav_id": "61", "speaker": "61", "offset": "161.770", "duration": "8.410", "wav": "61.wav", "translation": "Next, we need to use the synthesis interface. ", "transcript": "啊这儿往后看，呃接下来我们再看啊实际的合成接口。"}
{"wav_id": "61", "speaker": "61", "offset": "170.930", "duration": "5.550", "wav": "61.wav", "translation": "It can also be used by copying the example link to the address bar of the browser. ", "transcript": "合成接口也可以直接复制示例链接，将其贴到浏览器的地址栏。"}
{"wav_id": "61", "speaker": "61", "offset": "177.500", "duration": "5.620", "wav": "61.wav", "translation": "Then fill in the tok and test fields with the tokens of the previous step.", "transcript": "然后将上一步的token填写到tok 这些字段。"}
{"wav_id": "61", "speaker": "61", "offset": "184.020", "duration": "3.950", "wav": "61.wav", "translation": "The CUID field, which means the unique ID of a device, can be filled in with \"test\".", "transcript": "啊CUID可以直接用test来表示，是指设备的唯一ID。"}
{"wav_id": "61", "speaker": "61", "offset": "188.770", "duration": "3.150", "wav": "61.wav", "translation": "The \"tex\" means the text to be synthesized. ", "transcript": "tx tex也就是要合成的文本。"}
{"wav_id": "61", "speaker": "61", "offset": "192.080", "duration": "9.170", "wav": "61.wav", "translation": "We put a text into the field: \"Example of Baidu Speech Synthesis\".", "transcript": "嗯这里直接搁上一段音频“百度语音合成示例”。"}
{"wav_id": "61", "speaker": "61", "offset": "203.600", "duration": "8.800", "wav": "61.wav", "translation": "Now that we have built the link we need, we can produce the voice we need to synthesize by clicking Enter to get: \"Example of Baidu Speech Synthesis\".", "transcript": "这个链接就这样就构造完了，然后直接回车即可得到我们需要的合成音频，“百度语音合成示例”。"}
{"wav_id": "61", "speaker": "61", "offset": "214.250", "duration": "5.050", "wav": "61.wav", "translation": "Of course, the tex field can be replaced by any text you need.", "transcript": "当然您可以将这个tex字段替换为你需要的任何文本。"}
{"wav_id": "61", "speaker": "61", "offset": "220.360", "duration": "8.840", "wav": "61.wav", "translation": "For example, you can enter \"Baidu Speech offers technical supports\" and click Enter to get the voice: \"Baidu Speech offers technical supports\".", "transcript": "比如“百度语音提供技术支持”，然后回车，“百度语音提供技术支持”。"}
{"wav_id": "61", "speaker": "61", "offset": "234.460", "duration": "2.190", "wav": "61.wav", "translation": "This is the Text-to-Speech. ", "transcript": "刚才我们介绍了语音合成功能。"}
{"wav_id": "61", "speaker": "61", "offset": "237.040", "duration": "1.560", "wav": "61.wav", "translation": "Then I will introduce automated speech recognition to all of you.", "transcript": "现在我们再看语音识别。"}
{"wav_id": "61", "speaker": "61", "offset": "239.150", "duration": "5.910", "wav": "61.wav", "translation": "As opposed to Text-to-Speech, Automated speech recognition is designed to convert speech into text.", "transcript": "那语音识别和语音合成正好是相反的过程，它是将音频文件转化成文本的过程。"}
{"wav_id": "61", "speaker": "61", "offset": "245.690", "duration": "7.080", "wav": "61.wav", "translation": "The easiest way to use the automated speech recognition of Baidu is to use it through REST API interface.", "transcript": "那要使用百度语呃百度的语音识别功能，可以通过最简单方式，就是REST API接口来使用。"}
{"wav_id": "61", "speaker": "61", "offset": "258.210", "duration": "3.380", "wav": "61.wav", "translation": "Click the \"Document Center\" and find the REST API of automated speech recognition.", "transcript": "点击“文档中心”，找到语音识别REST API。"}
{"wav_id": "61", "speaker": "61", "offset": "264.030", "duration": "1.810", "wav": "61.wav", "translation": "And authentication mechanism is also required.", "transcript": "同样也需要鉴权认证，鉴权认证。"}
{"wav_id": "61", "speaker": "61", "offset": "266.410", "duration": "5.150", "wav": "61.wav", "translation": "After acquiring the token, we can send our requests through the REST API interface of automated speech recognition.", "transcript": "啊获取到token之后，可以通过语音识别的REST API接口进行请求。"}
{"wav_id": "61", "speaker": "61", "offset": "272.730", "duration": "6.900", "wav": "61.wav", "translation": "Because it is very complicated to use REST AP and REST API of automated speech recognition, we cannot use them through a GET request.", "transcript": "啊由于语音识别的REST AP、REST API啊使用会复杂一些，无法通过GET请求直接使用。"}
{"wav_id": "61", "speaker": "61", "offset": "280.220", "duration": "2.400", "wav": "61.wav", "translation": "Therefore, we need to use a sample. ", "transcript": "所以我们借这里借助一个示例工程。"}
{"wav_id": "61", "speaker": "61", "offset": "283.410", "duration": "6.400", "wav": "61.wav", "translation": "Search GitHub through Baidu Search Engine and search \"Baidu Speech Sample\" on GitHub. ", "transcript": "搜索GitHub，在GitHub中搜到呃搜索百度语音示例。"}
{"wav_id": "61", "speaker": "61", "offset": "296.840", "duration": "3.190", "wav": "61.wav", "translation": "Find \"baidu speech sample\" and click it.", "transcript": "找到“baidu speech sample”，点击进入。"}
{"wav_id": "61", "speaker": "61", "offset": "301.260", "duration": "6.130", "wav": "61.wav", "translation": "In this sample, there is a category: rest api/asr.", "transcript": "在这个示例里边，包含了rest api的asr这个目录。"}
{"wav_id": "61", "speaker": "61", "offset": "307.620", "duration": "4.660", "wav": "61.wav", "translation": "After entering the category, you can find demonstrations in three languages and audio files of a sample.", "transcript": "点击进入，有三种语言的演示和一个示例的音频文件。"}
{"wav_id": "61", "speaker": "61", "offset": "312.740", "duration": "3.340", "wav": "61.wav", "translation": "In this case, we wish to use PHP to perform the demonstration.", "transcript": "这里我们希望使用PHP来进行操作演示。"}
{"wav_id": "61", "speaker": "61", "offset": "318.300", "duration": "13.390", "wav": "61.wav", "translation": "Therefore, we now need to download a PHP through a git clone request. ", "transcript": "因此我们将现在这个工程先下载下来，通过git clone命令，即可将其下载。"}
{"wav_id": "61", "speaker": "61", "offset": "332.850", "duration": "2.310", "wav": "61.wav", "translation": "Well, we already have a PHP that has already been downloaded. ", "transcript": "哎呦我这里已经有一个下载好的工程。"}
{"wav_id": "61", "speaker": "61", "offset": "337.750", "duration": "5.830", "wav": "61.wav", "translation": "Enter the REST API catalogue and then asr. ", "transcript": "进到REST API目录，然后进入asr。"}
{"wav_id": "61", "speaker": "61", "offset": "344.520", "duration": "7.290", "wav": "61.wav", "translation": "As you can see, there is a sample audio file in pcm format: test.ppm pcm. ", "transcript": "然后啊在这些目录里面有一个示例音频文件是pcm格式test.ppm pcm。"}
{"wav_id": "61", "speaker": "61", "offset": "353.740", "duration": "6.570", "wav": "61.wav", "translation": "Because this computer is configured to operate in PHP environment, we can directly perform the demonstration using a PHP script.", "transcript": "啊我电脑现在有呃PHP的运行环境，因此呢直接用PHP脚本来进行演示。"}
{"wav_id": "61", "speaker": "61", "offset": "362.330", "duration": "7.550", "wav": "61.wav", "translation": "Then, we need to download the PHP script of this sample which has three parameters that need to be replaced.", "transcript": "啊我们编辑这个示例的PHP脚本，呃其中有三个参数需要替换。"}
{"wav_id": "61", "speaker": "61", "offset": "369.940", "duration": "5.220", "wav": "61.wav", "translation": "The CUID field, which means the unique ID of a device, should be filled in with \"test\".", "transcript": "cuid，啊也就是设备的唯一ID，我这里直接用test来表示。"}
{"wav_id": "61", "speaker": "61", "offset": "375.790", "duration": "7.520", "wav": "61.wav", "translation": "Two keys that can also be found in the corresponding application of Baidu Voice Open Platform are needed.", "transcript": "然后需要呃开放平台的两个key，同样在语音的开放平台中，对应的应用中找到。"}
{"wav_id": "61", "speaker": "61", "offset": "392.380", "duration": "2.970", "wav": "61.wav", "translation": "First, we should fill in these fields with the API Key and then Secret Key. ", "transcript": "首先填写API Key，然后填写Secret Key。"}
{"wav_id": "61", "speaker": "61", "offset": "398.220", "duration": "5.630", "wav": "61.wav", "translation": "Then, we save the configuration and execute it through PHP script.", "transcript": "啊将其保存，然后通过PHP标PHP的脚本引擎执行。"}
{"wav_id": "61", "speaker": "61", "offset": "406.910", "duration": "4.110", "wav": "61.wav", "translation": "Our audio file is not in the current directory, so we edit the script again. ", "transcript": "噢我们的音频文件没有在当前目录，所以再一次进行编辑。"}
{"wav_id": "61", "speaker": "61", "offset": "417.250", "duration": "5.900", "wav": "61.wav", "translation": "As our sample audio file is in its parent directory, we can save the configuration and execute it again.", "transcript": "啊我们的示例音频文件在它的上一层目录，可以将其保存，然后再次执行。"}
{"wav_id": "61", "speaker": "61", "offset": "426.860", "duration": "6.750", "wav": "61.wav", "translation": "If your networking works well, you can get the recognition results of these audio files: Baidu Speech offers technical supports.", "transcript": "哎如果你的网络正常，就可以得到这些音频文件的识别结果——百度语音提供技术支持。"}
{"wav_id": "61", "speaker": "61", "offset": "437.680", "duration": "3.820", "wav": "61.wav", "translation": "For other languages, you can refer to the sample.", "transcript": "呃其他语言大家可以参考示例工程。"}
{"wav_id": "61", "speaker": "61", "offset": "441.920", "duration": "3.530", "wav": "61.wav", "translation": "There are some samples of java and C++. ", "transcript": "呃现在我们有java和C++的一些示例。"}
{"wav_id": "61", "speaker": "61", "offset": "446.110", "duration": "8.490", "wav": "61.wav", "translation": "Similarly, if you use python or other languages, you can write a script based on the interface of htp independently.", "transcript": "啊同样你如果使用python或者其他的啊语言，你也可以自行呃根据hp htp的接口进行编写。"}
{"wav_id": "61", "speaker": "61", "offset": "461.670", "duration": "5.600", "wav": "61.wav", "translation": "We have displayed the recognition interface of REST API which can only handle real-time audio files.", "transcript": "刚才我们演示的REST API的识别接口，啊REST API只能处理实时的音频文件。"}
{"wav_id": "61", "speaker": "61", "offset": "467.300", "duration": "3.990", "wav": "61.wav", "translation": "If you want to achieve the recognition of audio stream, you need to leverage SDK.", "transcript": "如果要实现音频流的识别，就需要借助SDK了。"}
{"wav_id": "61", "speaker": "61", "offset": "471.550", "duration": "7.930", "wav": "61.wav", "translation": "We also have a sample for Android which can be used to demonstrate automated speech recognition and voice wake-up.", "transcript": "在我们的示例工程里面，同样也有一个啊安卓的示例工程，这个工程是用来演示语音识别和唤醒的。"}
{"wav_id": "61", "speaker": "61", "offset": "480.220", "duration": "5.410", "wav": "61.wav", "translation": "Import this sample into the development tool and then run it.", "transcript": "那我们将这个工程导入到开发工具里边，然后嗯将其运行。"}
{"wav_id": "61", "speaker": "61", "offset": "485.930", "duration": "2.580", "wav": "61.wav", "translation": "Afterward, let us look at the phone. ", "transcript": "运行之后，我们回到手机里边看一下。"}
{"wav_id": "61", "speaker": "61", "offset": "505.970", "duration": "1.450", "wav": "61.wav", "translation": "Click \"Regular mode\", \"Start\" and then \"Record Speech\".", "transcript": "我们直接点击“普通模式”，点击“开始”，啊我们点击“允许录音”。"}
{"wav_id": "61", "speaker": "61", "offset": "508.610", "duration": "1.170", "wav": "61.wav", "translation": "\"How's the weather tomorrow?\"", "transcript": "“明天天气怎么样？”"}
{"wav_id": "61", "speaker": "61", "offset": "518.300", "duration": "1.140", "wav": "61.wav", "translation": "\"What's the weather like the day after tomorrow\".", "transcript": "“后天天气怎么样？”"}
{"wav_id": "61", "speaker": "61", "offset": "523.270", "duration": "5.180", "wav": "61.wav", "translation": "Different from the recognition interface of REST API, we can see the result as we speak.", "transcript": "啊与REST API 的识别接口不同的是，我们一边说话就能看到识别结果。"}
{"wav_id": "61", "speaker": "61", "offset": "528.690", "duration": "1.460", "wav": "61.wav", "translation": "This is something that REST API cannot do.", "transcript": "而REST API是做不到的。"}
{"wav_id": "61", "speaker": "61", "offset": "530.710", "duration": "6.120", "wav": "61.wav", "translation": "As a result, for products running on Android and IOS, SDK must be used.", "transcript": "所以我们建议啊安卓、IOS这样端上的产品，呃一定要使用SDK 。"}
{"wav_id": "61", "speaker": "61", "offset": "541.380", "duration": "3.190", "wav": "61.wav", "translation": "As the final part of the video, I will share with you a voice technology product.", "transcript": "最后我们看一个语音产品的案例。"}
{"wav_id": "61", "speaker": "61", "offset": "545.080", "duration": "5.260", "wav": "61.wav", "translation": "In this case, automated speech recognition, voice wake-up and Text-to-Speech will all be involved.", "transcript": "在这个案例里边，语音识别唤醒和合成都将被用到。"}
{"wav_id": "61", "speaker": "61", "offset": "552.340", "duration": "2.190", "wav": "61.wav", "translation": "Now let us see what the product can do.", "transcript": "好，那我们现在就看功能展示。"}
{"wav_id": "61", "speaker": "61", "offset": "556.050", "duration": "1.780", "wav": "61.wav", "translation": "\"Search for tomorrow’s weather through Baidu Search Engine\"", "transcript": "“百度一下明天的天气”"}
{"wav_id": "61", "speaker": "61", "offset": "564.000", "duration": "1.700", "wav": "61.wav", "translation": "\"Navigate to the New Baidu Edifice\"", "transcript": "“导航到百度新大厦”"}
{"wav_id": "61", "speaker": "61", "offset": "567.800", "duration": "1.720", "wav": "61.wav", "translation": "\"Search for a badminton racket on Taobao\"", "transcript": "“淘宝搜索羽毛球拍”"}
{"wav_id": "61", "speaker": "61", "offset": "571.860", "duration": "0.960", "wav": "61.wav", "translation": "\"Open Wechat\"", "transcript": "“打开微信”"}
{"wav_id": "61", "speaker": "61", "offset": "576.090", "duration": "1.150", "wav": "61.wav", "translation": "\"Download Baidu Waimai\"", "transcript": "“下载百度外卖”"}
{"wav_id": "61", "speaker": "61", "offset": "581.250", "duration": "1.380", "wav": "61.wav", "translation": "\"Call China Unicom\"", "transcript": "“打电话给联通”"}
{"wav_id": "61", "speaker": "61", "offset": "592.940", "duration": "3.140", "wav": "61.wav", "translation": "Now, let’s analyze the functions of this software and the way they are achieved. ", "transcript": "现在我们分析一下这款软件的功能和实现。"}
{"wav_id": "61", "speaker": "61", "offset": "596.350", "duration": "4.680", "wav": "61.wav", "translation": "This software supports the function of monitoring and making telephone calls. ", "transcript": "这款这款软件呢能够监听导航，打电话。"}
{"wav_id": "61", "speaker": "61", "offset": "601.620", "duration": "5.420", "wav": "61.wav", "translation": "Apart from this, there is also Nuomi, of whom the prefix serves as a wake word.", "transcript": "啊以及糯米搜索之类的这种前缀关键词，用这些关键词作为唤醒词。"}
{"wav_id": "61", "speaker": "61", "offset": "607.680", "duration": "10.510", "wav": "61.wav", "translation": "Once hearing these words, this software will initiate a recognition task which matches these prefix words with the targeting content in the search engine. ", "transcript": "一旦监听到这些词之后，将会立即启动一个识别任务，并且将这些前缀关键词和后面识的识别内容一同交给识别引擎进行识别。"}
{"wav_id": "61", "speaker": "61", "offset": "618.990", "duration": "9.630", "wav": "61.wav", "translation": "Then we can get a recognition result of a text which will be analyzed to call a specific application.", "transcript": "识别之后得到一个呃文本的识别结果，然后将这个文本的识结果识别结果加以分析，啊最后调取特定的应用。"}
{"wav_id": "61", "speaker": "61", "offset": "629.150", "duration": "8.980", "wav": "61.wav", "translation": "If it is an instruction to make a phone call, it will be handled by the calling module to initiate the function of making a phone call.", "transcript": "如果是打电话类的指令，那就啊交给打电话的模块，让系统的打电话功能去呃调启打电话的功能。"}
{"wav_id": "61", "speaker": "61", "offset": "638.650", "duration": "4.700", "wav": "61.wav", "translation": "And if you want to search for something, it will open the Baidu Search Engine through the browser.", "transcript": "如果说的是搜索什么东西，就直接通过浏览器打开百度搜索。"}
{"wav_id": "61", "speaker": "61", "offset": "644.200", "duration": "8.580", "wav": "61.wav", "translation": "Of course, if you want to download or use other functions of Nuomi, their corresponding applications will be initiated as long as they are covered in the program. ", "transcript": "那当然如果是糯米下载，和一些其它的，只要能够程序里边有的功能都将调启指定的呃应用。"}
{"wav_id": "61", "speaker": "61", "offset": "655.160", "duration": "3.750", "wav": "61.wav", "translation": "Given the limited time of this lesson, I will not demonstrate the specific codes here. ", "transcript": "由于这节课程的时间比较短，我就不在这里展示代码啦呐。"}
{"wav_id": "61", "speaker": "61", "offset": "659.080", "duration": "10.990", "wav": "61.wav", "translation": "However, I will upload the complete codes of this product to GitHub, and the specific link can be found in the attachment of this lesson.", "transcript": "但是我会将这个产品用到这个代码啊完整的上传到GitHub，具体的链接可以在课程的附件里面进行查找。"}
{"wav_id": "61", "speaker": "61", "offset": "672.190", "duration": "8.030", "wav": "61.wav", "translation": "That is all for today's lesson, we discussed the relevant technologies of Text-to-Speech and automated speech recognition, and we demonstrated a sample.", "transcript": "今天的课程就给大家介绍到这里，在今天的课程中给大家演示了语音合成和识别的相关技术，并展示了一个实例。"}
{"wav_id": "61", "speaker": "61", "offset": "680.670", "duration": "6.090", "wav": "61.wav", "translation": "If you want to know more details of Baidu voice technologies, please contact us via our email or web site.", "transcript": "如果大家想获取更多百度语音相关的技术知识的，可以通过邮箱或网址联系到我们。"}
{"wav_id": "61", "speaker": "61", "offset": "687.050", "duration": "0.620", "wav": "61.wav", "translation": "Thank you!", "transcript": "谢谢大家！"}
